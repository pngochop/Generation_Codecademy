{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","books","fetchData","a","axios","get","headers","authorization","then","response","console","log","className","onClick","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mQAgEeA,MAtCf,WAAe,MAEaC,mBAAS,MAFtB,mBAENC,EAFM,KAULC,GAVK,KAUI,uCAAG,sBAAAC,EAAA,sDAChBC,IAAMC,IAAI,2CACR,CACEC,QAAS,CACLC,cAAe,wLACf,eAAgB,sBAEnBC,MAAK,SAAUC,GAChBC,QAAQC,IAAIF,MARA,2CAAH,sDAWjB,OACE,sBAAKG,UAAU,MAAf,UACE,uDACA,yEACA,8BACE,wBAAQA,UAAU,eAAeC,QAASX,EAA1C,0BAKF,qBAAKU,UAAU,QAAf,SACGX,QC9CMa,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBR,MAAK,YAAkD,IAA/CS,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OC2CdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.9e4869d8.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n// import logo from './logo.svg';\nimport './App.css';\n\n/*\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}*/\nfunction App() {\n  // Component variables go here\n  const [books, setBooks] = useState(null);\n  const apiURL = \"https://hopp-lab4-backend.herokuapp.com/\";\n  // const apiURL = \"https://www.anapioficeandfire.com/api/books?pageSize=30\";\n    // const fetchData = async () => {\n    //     const response = await axios.get(apiURL)\n\n    //     setBooks(response.data) \n    // }\n    const fetchData = async () => {\n      axios.get('https://hopp-lab4-backend.herokuapp.com/', //proxy uri\n        {\n          headers: {\n              authorization: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6IndpbmRvZmNoYXJpdGFibGVAZ21haWwuY29tIiwiaWF0IjoxNTcyMjAyODUyLCJleHAiOjE1NzIyODkyNTJ9.OIWsMnAcIotvJ3XJ3eFoFCet4Yu-JA5OwYBx2wMblvs' ,\n              'Content-Type': 'application/json'\n          } \n        }).then(function (response) {\n          console.log(response);\n        });\n    }\n  return (\n    <div className=\"App\">\n      <h1>Game of Thrones Books</h1>\n      <h2>Fetch a list from an API and display it</h2>\n      <div>\n        <button className=\"fetch-button\" onClick={fetchData}>\n          Fetch Data\n        </button>\n      </div>\n      \n      <div className=\"books\">\n        {books}\n      </div>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n/*\nfunction MyComponent() {\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [items, setItems] = useState([]);\n\n  // Note: the empty deps array [] means\n  // this useEffect will run once\n  // similar to componentDidMount()\n  useEffect(() => {\n    fetch(\"https://hopp-lab4-backend.herokuapp.com/\")\n      .then(res => res.json())\n      .then(\n        (result) => {\n          setIsLoaded(true);\n          setItems(result);\n        },\n        // Note: it's important to handle errors here\n        // instead of a catch() block so that we don't swallow\n        // exceptions from actual bugs in components.\n        (error) => {\n          setIsLoaded(true);\n          setError(error);\n        }\n      )\n  }, [])\n\n  if (error) {\n    return <div>Error: {error.message}</div>;\n  } else if (!isLoaded) {\n    return <div>Loading...</div>;\n  } else {\n    return (\n      <ul>\n        {items.map(item => (\n          <li key={item.id}>\n            {item.name} {item.price}\n          </li>\n        ))}\n      </ul>\n    );\n  }\n}\n*/\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n//    <App /> inside <React.StrictMode>\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}